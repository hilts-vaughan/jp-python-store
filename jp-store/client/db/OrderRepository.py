'''
Created on Mar 12, 2015

@author: Vaughan Hilts
'''
import client.db.Repository

"""
    A repository connected to a MySQL backend used for fetching: Orders
"""
class OrderRepository(client.db.Repository.Repository):

    # Get the super
    def __init__(self):
        super().__init__()
    
    
    """
        Returns a set of order data for a specific user, given their customer ID.
    """
    def get_orders_for(self, cid):
        #get all the orders from a given customer and return a list
        cursor = self._conn.cursor()            
        query = ("SELECT OrderNumber, Quantity, Product_ProductId FROM `order` JOIN `orderitem` ON `order`.OrderNumber = Order_OrderNumber WHERE CustomerAccount_CustomerId={} ORDER BY OrderNumber;".format(cid))
        cursor.execute(query)
        results = cursor.fetchall()
        
        # Clean up the cursor
        cursor.close()
        
        return results
    """
        Creates a new order object
    """
    def create_new_order(self, address, dateCreated, dateEstimated, dateDelivered,cid):
        #generates a new order and returns the autogenerated row number
        cursor = self._conn.cursor()
        query = ("INSERT INTO `order` VALUES(NULL, %s, %s, NULL, NULL, %s)")
        
        params = (address, dateCreated,cid)        
        cursor.execute(query, params)
        lid = cursor.lastrowid
        cursor.close()
        #return this so order items can identify the created order
        return lid
    
            